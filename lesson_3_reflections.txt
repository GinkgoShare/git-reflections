When would you want to use a remote repository rather than keeping all your work local?

You would want to use remote repositories when you are collaborating on a project with other Git users. It is also a great 
way to showcase you work.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

For control, you wouldn't want GitHub to override changes you are making on your local repo and you wouldn't want to repeatedly make decisions about which parts of files you would want to merge together without being ready with a complete commit on the local end. When you are working on a module of a project, you want to maintain the context in which you are working in until you are ready to add external factors that could effect your work.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks clones a repository from another GitHub account to my remote GitHub account. Clones copy a remote repository from my GitHub account and creates a local repository where I can work offline. Branches copies an existing and local branch within a local repository into another separate local branch that allows me to switch context on what I'm working on within a project.

What is the benefit of having a copy of the last known state of the remote stored locally?

You can keep remote updates that you plan to merge your work into on a local branch which would allow you to merge them 
offline.



git commands learned in lesson 3:

	git remote :						to view and create remotes

	git remote add <name> <url> :		to add a repository on GitHub as a remote, name to refer to the repository on GitHub, url 								  from remote repository

	git remote -v :						git remote will output more info

	git push <remote> <local_branch> : 	send changes to remote repository, branch you want to send

	git pull <remote> <local_branch> : 	retrieve changes from the remote branch

	git clone <url> :					copies a repository from GitHub to your local active directory. sets up a remote 										(origin) for you on the GitHub server

	git fetch <remote> :				updates the local copy of the remote branch

	git pull origin master == git fetch origin + git merge master origin/master 	/* origin/master is the local copy of the 																				   * remote branch */